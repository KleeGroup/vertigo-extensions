package io.vertigo.orchestra.dao.execution

create Task TkGetNodeByName {
	storeName : "orchestra"
    className : "io.vertigo.basics.task.TaskEngineSelect"
        request : "
        	select 
        		nod.*
        	from o_node nod
        	where nod.NAME = #nodeName#
			"
	in nodeName	 	{domain : DoOLibelle 		cardinality: "1" 	}
	out dtoONode	 	{domain : DoDtONode 		cardinality: "?" 	}
}


create Task TkHandleProcessesOfDeadNodes {
	storeName : "orchestra"
    className : "io.vertigo.basics.task.TaskEngineProc"
        request : "
        	update o_activity_execution 
        	set EST_CD = 'ABORTED'
        	where ACE_ID in (
				select ace.ACE_ID
				from o_activity_execution ace
				join o_node nod on nod.NOD_ID = ace.NOD_ID
				where ace.EST_CD in ('RUNNING','WAITING','SUBMITTED') and nod.HEARTBEAT < #maxDate#);
			
 			update o_process_execution
        	set EST_CD = 'ABORTED'
        	where PRE_ID in (
				select pre.PRE_ID
				from o_process_execution pre
				join o_activity_execution ace on ace.PRE_ID = pre.PRE_ID
				where ace.EST_CD = 'ABORTED');
        	
			"
	in maxDate	 	{domain : DoOTimestamp 		cardinality: "1" 	}
}

create Task TkHandleDeadProcessesOfNode {
	storeName : "orchestra"
    className : "io.vertigo.basics.task.TaskEngineProc"
        request : "
        	update o_activity_execution 
        	set EST_CD = 'ABORTED'
        	where ACE_ID in (
				select ace.ACE_ID
				from o_activity_execution ace
				where ace.EST_CD in ('RUNNING','WAITING','SUBMITTED') and ace.NOD_ID = #nodId#);
			
 			update o_process_execution
        	set EST_CD = 'ABORTED'
        	where PRE_ID in (
				select pre.PRE_ID
				from o_process_execution pre
				join o_activity_execution ace on ace.PRE_ID = pre.PRE_ID
				where ace.EST_CD = 'ABORTED');
        	
			"
	in nodId	 	{domain : DoOIdentifiant 		cardinality: "1" 	}
}


